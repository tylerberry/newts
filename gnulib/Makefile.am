## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004-2006 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by: gnulib-tool --import --dir=. --lib=libgnu --source-base=gnulib --m4-base=m4/gnulib --doc-base=doc --aux-dir=. --avoid=xalloc --avoid=xalloc-die --libtool --macro-prefix=gl dirname exit exitfail free getdate getgroups getline gettext gettext-h malloc readutmp realloc strcase strpbrk strstr strtok_r vasprintf xgethostname yesno

AUTOMAKE_OPTIONS = 1.5 gnits

noinst_LTLIBRARIES = libgnu.la

libgnu_la_SOURCES =
libgnu_la_LIBADD = $(gl_LTLIBOBJS)
libgnu_la_DEPENDENCIES = $(gl_LTLIBOBJS)
EXTRA_libgnu_la_SOURCES =
libgnu_la_LDFLAGS = $(AM_LDFLAGS)
noinst_HEADERS =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

AM_CPPFLAGS =

## begin gnulib module alloca


EXTRA_DIST += alloca.c

EXTRA_libgnu_la_SOURCES += alloca.c

libgnu_la_LIBADD += @LTALLOCA@
libgnu_la_DEPENDENCIES += @LTALLOCA@
## end   gnulib module alloca

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
alloca.h: alloca_.h
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/alloca_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

EXTRA_DIST += alloca_.h

## end   gnulib module alloca-opt

## begin gnulib module allocsa

libgnu_la_SOURCES += allocsa.h allocsa.c

EXTRA_DIST += allocsa.valgrind

## end   gnulib module allocsa

## begin gnulib module dirname


EXTRA_DIST += basename.c dirname.c dirname.h stripslash.c

EXTRA_libgnu_la_SOURCES += basename.c dirname.c stripslash.c

## end   gnulib module dirname

## begin gnulib module exit

libgnu_la_SOURCES += exit.h

## end   gnulib module exit

## begin gnulib module exitfail


EXTRA_DIST += exitfail.c exitfail.h

EXTRA_libgnu_la_SOURCES += exitfail.c

## end   gnulib module exitfail

## begin gnulib module free


EXTRA_DIST += free.c

EXTRA_libgnu_la_SOURCES += free.c

## end   gnulib module free

## begin gnulib module getdate

libgnu_la_SOURCES += getdate.y
BUILT_SOURCES += getdate.c
MAINTAINERCLEANFILES += getdate.c
EXTRA_DIST += getdate.c

EXTRA_DIST += getdate.h

## end   gnulib module getdate

## begin gnulib module getdelim


EXTRA_DIST += getdelim.c getdelim.h

EXTRA_libgnu_la_SOURCES += getdelim.c

## end   gnulib module getdelim

## begin gnulib module getgroups


EXTRA_DIST += getgroups.c

EXTRA_libgnu_la_SOURCES += getgroups.c

## end   gnulib module getgroups

## begin gnulib module gethostname


EXTRA_DIST += gethostname.c

EXTRA_libgnu_la_SOURCES += gethostname.c

## end   gnulib module gethostname

## begin gnulib module getline


EXTRA_DIST += getline.c getline.h

EXTRA_libgnu_la_SOURCES += getline.c

## end   gnulib module getline

## begin gnulib module gettext

# This is for those projects which use "gettextize --intl" to put a source-code
# copy of libintl into their package. In such projects, every Makefile.am needs
# -I$(top_builddir)/intl, so that <libintl.h> can be found in this directory.
# For the Makefile.ams in other directories it is the maintainer's
# responsibility; for the one from gnulib we do it here.
# This option has no effect when the user disables NLS (because then the intl
# directory contains no libintl.h file) or when the project does not use
# "gettextize --intl".
AM_CPPFLAGS += -I$(top_builddir)/intl

## end   gnulib module gettext

## begin gnulib module gettext-h

libgnu_la_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module gettime


EXTRA_DIST += gettime.c

EXTRA_libgnu_la_SOURCES += gettime.c

## end   gnulib module gettime

## begin gnulib module gettimeofday


EXTRA_DIST += gettimeofday.c

EXTRA_libgnu_la_SOURCES += gettimeofday.c

## end   gnulib module gettimeofday

## begin gnulib module malloc


EXTRA_DIST += malloc.c

EXTRA_libgnu_la_SOURCES += malloc.c

## end   gnulib module malloc

## begin gnulib module mbchar


EXTRA_DIST += mbchar.c mbchar.h

EXTRA_libgnu_la_SOURCES += mbchar.c

## end   gnulib module mbchar

## begin gnulib module mbuiter

libgnu_la_SOURCES += mbuiter.h

## end   gnulib module mbuiter

## begin gnulib module memchr


EXTRA_DIST += memchr.c

EXTRA_libgnu_la_SOURCES += memchr.c

## end   gnulib module memchr

## begin gnulib module mktime


EXTRA_DIST += mktime.c

EXTRA_libgnu_la_SOURCES += mktime.c

## end   gnulib module mktime

## begin gnulib module readutmp


EXTRA_DIST += readutmp.c readutmp.h

EXTRA_libgnu_la_SOURCES += readutmp.c

## end   gnulib module readutmp

## begin gnulib module realloc


EXTRA_DIST += realloc.c

EXTRA_libgnu_la_SOURCES += realloc.c

## end   gnulib module realloc

## begin gnulib module regex


EXTRA_DIST += regcomp.c regex.c regex.h regex_internal.c regex_internal.h regexec.c

EXTRA_libgnu_la_SOURCES += regcomp.c regex.c regex_internal.c regexec.c

## end   gnulib module regex

## begin gnulib module rpmatch


EXTRA_DIST += rpmatch.c

EXTRA_libgnu_la_SOURCES += rpmatch.c

## end   gnulib module rpmatch

## begin gnulib module setenv


EXTRA_DIST += setenv.c setenv.h unsetenv.c

EXTRA_libgnu_la_SOURCES += setenv.c unsetenv.c

## end   gnulib module setenv

## begin gnulib module size_max

libgnu_la_SOURCES += size_max.h

## end   gnulib module size_max

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
stdbool.h: stdbool_.h
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

EXTRA_DIST += stdbool_.h

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
stdint.h: stdint_.h
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE_WCHAR_H''@/$(HAVE_WCHAR_H)/g' \
	      -e 's/@''HAVE_STDINT_H''@/$(HAVE_STDINT_H)/g' \
	      -e 's|@''ABSOLUTE_STDINT_H''@|$(ABSOLUTE_STDINT_H)|g' \
	      -e 's/@''HAVE_SYS_TYPES_H''@/$(HAVE_SYS_TYPES_H)/g' \
	      -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_INTTYPES_H''@/$(HAVE_SYS_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_BITYPES_H''@/$(HAVE_SYS_BITYPES_H)/g' \
	      -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	      -e 's/@''HAVE_UNSIGNED_LONG_LONG_INT''@/$(HAVE_UNSIGNED_LONG_LONG_INT)/g' \
	      -e 's/@''BITSIZEOF_PTRDIFF_T''@/$(BITSIZEOF_PTRDIFF_T)/g' \
	      -e 's/@''PTRDIFF_T_SUFFIX''@/$(PTRDIFF_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIG_ATOMIC_T''@/$(BITSIZEOF_SIG_ATOMIC_T)/g' \
	      -e 's/@''HAVE_SIGNED_SIG_ATOMIC_T''@/$(HAVE_SIGNED_SIG_ATOMIC_T)/g' \
	      -e 's/@''SIG_ATOMIC_T_SUFFIX''@/$(SIG_ATOMIC_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIZE_T''@/$(BITSIZEOF_SIZE_T)/g' \
	      -e 's/@''SIZE_T_SUFFIX''@/$(SIZE_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WCHAR_T''@/$(BITSIZEOF_WCHAR_T)/g' \
	      -e 's/@''HAVE_SIGNED_WCHAR_T''@/$(HAVE_SIGNED_WCHAR_T)/g' \
	      -e 's/@''WCHAR_T_SUFFIX''@/$(WCHAR_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WINT_T''@/$(BITSIZEOF_WINT_T)/g' \
	      -e 's/@''HAVE_SIGNED_WINT_T''@/$(HAVE_SIGNED_WINT_T)/g' \
	      -e 's/@''WINT_T_SUFFIX''@/$(WINT_T_SUFFIX)/g' \
	      < $(srcdir)/stdint_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

EXTRA_DIST += stdint_.h

## end   gnulib module stdint

## begin gnulib module strcase


EXTRA_DIST += strcase.h strcasecmp.c strncasecmp.c

EXTRA_libgnu_la_SOURCES += strcasecmp.c strncasecmp.c

## end   gnulib module strcase

## begin gnulib module strndup


EXTRA_DIST += strndup.c strndup.h

EXTRA_libgnu_la_SOURCES += strndup.c

## end   gnulib module strndup

## begin gnulib module strnlen


EXTRA_DIST += strnlen.c strnlen.h

EXTRA_libgnu_la_SOURCES += strnlen.c

## end   gnulib module strnlen

## begin gnulib module strnlen1

libgnu_la_SOURCES += strnlen1.h strnlen1.c

## end   gnulib module strnlen1

## begin gnulib module strpbrk


EXTRA_DIST += strpbrk.c strpbrk.h

EXTRA_libgnu_la_SOURCES += strpbrk.c

## end   gnulib module strpbrk

## begin gnulib module strstr


EXTRA_DIST += strstr.c strstr.h

EXTRA_libgnu_la_SOURCES += strstr.c

## end   gnulib module strstr

## begin gnulib module strtok_r


EXTRA_DIST += strtok_r.c strtok_r.h

EXTRA_libgnu_la_SOURCES += strtok_r.c

## end   gnulib module strtok_r

## begin gnulib module time_r


EXTRA_DIST += time_r.c time_r.h

EXTRA_libgnu_la_SOURCES += time_r.c

## end   gnulib module time_r

## begin gnulib module timespec


EXTRA_DIST += timespec.h

## end   gnulib module timespec

## begin gnulib module unistd

BUILT_SOURCES += $(UNISTD_H)

# We need the following in order to create an empty placeholder for
# <unistd.h> when the system doesn't have one.
unistd.h:
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  echo '/* Empty placeholder for $@.  */'; \
	} > $@
MOSTLYCLEANFILES += unistd.h

## end   gnulib module unistd

## begin gnulib module vasnprintf


EXTRA_DIST += asnprintf.c printf-args.c printf-args.h printf-parse.c printf-parse.h vasnprintf.c vasnprintf.h

EXTRA_libgnu_la_SOURCES += asnprintf.c printf-args.c printf-parse.c vasnprintf.c

## end   gnulib module vasnprintf

## begin gnulib module vasprintf


EXTRA_DIST += asprintf.c vasprintf.c vasprintf.h

EXTRA_libgnu_la_SOURCES += asprintf.c vasprintf.c

## end   gnulib module vasprintf

## begin gnulib module wcwidth

libgnu_la_SOURCES += wcwidth.h

## end   gnulib module wcwidth

## begin gnulib module xgethostname

libgnu_la_SOURCES += xgethostname.h xgethostname.c

## end   gnulib module xgethostname

## begin gnulib module xsize

libgnu_la_SOURCES += xsize.h

## end   gnulib module xsize

## begin gnulib module xstrndup

libgnu_la_SOURCES += xstrndup.h xstrndup.c

## end   gnulib module xstrndup

## begin gnulib module yesno


EXTRA_DIST += yesno.c yesno.h

EXTRA_libgnu_la_SOURCES += yesno.c

## end   gnulib module yesno


mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done
